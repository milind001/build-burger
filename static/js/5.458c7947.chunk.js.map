{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js"],"names":["order","ingredients","price","objingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","Number","parseFloat","Orders","this","props","fetchOrders","token","userId","orders","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"6KAmCeA,G,MAhCD,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,MACnBC,EAAiB,GAEvB,IAAK,IAAIC,KAAkBH,EACvBE,EAAeE,KACX,CACIC,KAAMF,EACNG,OAAQN,EAAYG,KAKhC,IAAMI,EAAmBL,EAAeM,KAAI,SAAAC,GACxC,OAAO,0BACHC,MAAO,CACCC,cAAc,aACdC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEjBC,IAAKP,EAAGJ,MAAOI,EAAGJ,KARf,KAQuBI,EAAGH,OAR1B,QAWX,OACI,yBAAKW,UAAU,SACX,4CAAkBV,GAClB,qCAAU,qCAAWW,OAAOC,WAAWlB,Q,wBCtB7CmB,E,kLAGEC,KAAKC,MAAMC,YAAYF,KAAKC,MAAME,MAAOH,KAAKC,MAAMG,U,+BAKpD,IAAIC,EAAS,kBAAC,IAAD,MASb,OARKL,KAAKC,MAAMK,UACZD,EAASL,KAAKC,MAAMI,OAAOlB,KAAI,SAAAT,GAAK,OAC5B,kBAAC,EAAD,CACIiB,IAAKjB,EAAM6B,GACX5B,YAAaD,EAAMC,YACnBC,MAAOF,EAAME,YAIzB,6BACKyB,O,GAnBIG,aAyCNC,uBAfS,SAAAC,GACpB,MAAM,CACFL,OAAQK,EAAMhC,MAAM2B,OACpBC,QAASI,EAAMhC,MAAM4B,QACrBH,MAAOO,EAAMC,KAAKR,MAClBC,OAAQM,EAAMC,KAAKP,WAIA,SAAAQ,GACvB,MAAO,CACHV,YAAa,SAACC,EAAOC,GAAR,OAAmBQ,EAASC,IAAmBV,EAAOC,QAI5DK,CAA6CK,YAAiBf,EAAQgB,O","file":"static/js/5.458c7947.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Order.scss';\r\n\r\nconst order = ({ingredients, price}) => {\r\n    const objingredients = [];\r\n\r\n    for( let ingredientName in ingredients ){\r\n        objingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\n\r\n    const ingredientOutput = objingredients.map(ig => {\r\n        return <span \r\n            style={{\r\n                    textTransform:'capitalize',\r\n                    display: 'inline-block',\r\n                    margin: '0 8px',\r\n                    border: '1px solid #ccc',\r\n                    padding: '5px'  \r\n            }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\r\n    })\r\n\r\n    return (\r\n        <div className='Order'>\r\n            <p>Ingredients : {ingredientOutput}</p>\r\n            <p>Price: <strong>$ {Number.parseFloat(price)}</strong></p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from '../../axios';\r\nimport Order from '../../components/Order/Order';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/spinner';\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {    \r\n        this.props.fetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props.loading)\r\n        let orders = <Spinner />;\r\n        if (!this.props.loading){\r\n            orders = this.props.orders.map(order => (\r\n                    <Order \r\n                        key={order.id}\r\n                        ingredients={order.ingredients}\r\n                        price={order.price}  />\r\n            ) )\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchOrders: (token, userId) => dispatch(actions.fetchOrder(token, userId))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}