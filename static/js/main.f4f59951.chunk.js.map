{"version":3,"sources":["store/actions/actionTypes.js","shared/utility.js","hoc/Auxiliary/Auxiliary.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","axios.js","components/UI/Backdrop/backDrop.js","components/UI/Modal/modal.js","components/UI/Button/button.js","components/UI/Spinner/spinner.js","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngridient/burgerIngridient.js","components/Burger/burger.js","assets/burger-logo.png","hoc/asyncComponent/asyncComponent.js","components/Logo/logo.js","components/Navigation/NavigationItems/NavigationItem/navigationItem.js","components/Navigation/NavigationItems/navigationItems.js","components/Navigation/SideDrawer/DrawerToggle/drawerToggle.js","components/Navigation/Toolbar/toolbar.js","components/Navigation/SideDrawer/sideDrawer.js","hoc/Layout/layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/orderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","aux","props","children","addIngredient","name","type","actionTypes","payload","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerSuccess","err","purchaseInit","fetchOrder","userId","queryParams","res","orders","fetchedOrders","key","push","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignUp","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","setAuthRedirectPath","path","authCheckState","getItem","instance","create","baseURL","BackDrop","show","clicked","className","onClick","Modal","nextProps","nextState","this","modalClosed","style","transform","opacity","Component","CustomButton","disabled","btnType","join","Spinner","withErrorHandler","WrappedComponents","state","errorConfirmHandler","setState","reqInterceptor","interceptors","request","use","req","resInterceptor","eject","message","BurgerIngridient","ingredient","Burger","arrayIngredients","Object","keys","map","igKey","Array","_","i","reduce","prev","cur","concat","module","exports","asyncComponent","importComponent","component","cmp","default","C","Logo","height","src","burgerLogo","alt","NavigationItem","to","link","exact","NavigationItems","isAuthenticated","DrawerToggle","Toolbar","drawerToggleClicked","isAuth","SideDrawer","open","closed","Layout","showSideDrawer","sideDraweClosedhandler","sideDrawerToggleHandler","prevState","connect","BuildControl","label","added","removed","controls","BuildControls","ingredientAdded","ingredientRemove","price","purchasable","ordered","isAUth","toFixed","control","OrderSummary","purhaseCanceled","purchaseContinued","ingredientSummary","textTransform","BurgerBuilder","purchasing","updatePurchaseState","sum","el","purchaseHandler","history","purchaseCancelHandler","purchaseContinueHandler","initPurchase","ingredientsInit","disabledInfo","ings","orderSummary","burger","ingredientAdd","burgerBuilder","totalPrice","ingName","actions","Logout","onLogout","asyncCheckout","asyncOrders","asyncAuth","withRouter","onTryAutoSignUp","useEffect","routes","Boolean","window","location","hostname","match","INITIAL_STATE","building","INGREDIENT_PRICES","salad","bacon","cheese","meat","action","updatedIngredient","updatedState","updatedIng","updatedSt","setIngredient","reducer","loading","purchased","newOrder","authRedirectPath","authStart","authFail","authLogout","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.f4f59951.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_AUTH_LOGOUTFAIL';\r\n\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n}; \r\n\r\n\r\nexport const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n    if (!rules) {\r\n        return true;\r\n    }\r\n    \r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid;\r\n}","const aux = props => props.children; \r\n\r\nexport default aux;","import * as actionTypes from './actionTypes';\r\n// import { updateObject } from '../utility';\r\nimport axios from '../../axios';\r\n\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        payload: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        payload: name\r\n    };\r\n};\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        payload: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://burger-50c34.firebaseio.com/ingredients.json')\r\n        .then(response => {\r\n            dispatch(setIngredients(response.data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchIngredientsFailed());\r\n        });\r\n    }\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData \r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData)\r\n            .then(response => {\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n            })\r\n            .catch(err => {\r\n                dispatch(purchaseBurgerFail(err));\r\n            });\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n}; \r\n\r\n\r\nexport const fetchOrderSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrderFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        payload: error\r\n    };\r\n};\r\n\r\nexport const fetchOrderStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\n\r\nexport const fetchOrder = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrderStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo\"' + userId + '\"';\r\n        axios.get('/orders.json' + queryParams)      \r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                dispatch(fetchOrderSuccess(fetchedOrders));\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrderFail(err));\r\n            });\r\n    };\r\n};\r\n\r\n\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    }\r\n}\r\n\r\nexport const auth = (email, password, isSignUp) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCXZVfpBdcdc__5kNkKzr-kQ65BB0YZhIY';\r\n        if (!isSignUp) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCXZVfpBdcdc__5kNkKzr-kQ65BB0YZhIY';\r\n        }\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                const expirationDate= new Date (new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFail(err.response.data.error));\r\n            });\r\n    }\r\n} \r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n} \r\n\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token){\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if(expirationDate > new Date()) {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\r\n            } else {\r\n                dispatch(logout());\r\n            }            \r\n        }\r\n        \r\n    };\r\n};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://burger-50c34.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport './backdrop.scss';\r\n\r\nconst BackDrop = ({show, clicked}) => (\r\n    show ? <div className='Backdrop' onClick={clicked}></div> : null\r\n); \r\n\r\nexport default BackDrop;","import React, { Component } from 'react';\r\nimport './modal.scss';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport BackDrop from '../Backdrop/backDrop';\r\n\r\nclass Modal extends Component{\r\n    \r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Aux>\r\n                <BackDrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div \r\n                    className='Modal' \r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)', \r\n                        opacity: this.props.show ? '1' : '0' \r\n                    }}\r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './button.scss';\r\n\r\nconst CustomButton = (props) => (\r\n    <button \r\n        disabled={props.disabled}\r\n        className={['Button', [props.btnType]].join(' ')}\r\n        onClick={props.clicked}\r\n    >{props.children}</button>\r\n);\r\n\r\nexport default CustomButton;","import React from 'react';\r\nimport './spinner.scss';\r\n\r\nconst Spinner = () => (\r\n    <div className=\"Loader\">Loading...</div>\r\n);\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/modal';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\n\r\nconst withErrorHandler = ( WrappedComponents, axios ) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n        componentWillMount(){\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n\r\n        componentWillUnmount(){\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmHandler = () => {\r\n            this.setState({error: null});\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <Aux>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        clicked={this.errorConfirmHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponents {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './burgerIngridient.scss';\r\n\r\nconst BurgerIngridient = (props) => {\r\n    let ingredient = null;\r\n\r\n    switch(props.type){\r\n        case 'bread-bottom':\r\n            ingredient = <div className='BreadBottom'></div>;\r\n            break;\r\n        case 'bread-top':\r\n            ingredient = (\r\n                <div className='BreadTop'>\r\n                    <div className='Seeds1'></div>\r\n                    <div className='Seeds2'></div>\r\n                </div>\r\n            );\r\n            break;\r\n\r\n        case 'meat':\r\n            ingredient = <div className='Meat'></div>;\r\n            break;\r\n\r\n        case 'cheese':\r\n            ingredient = <div className='Cheese'></div>;\r\n            break;\r\n\r\n        case 'salad':\r\n            ingredient = <div className='Salad'></div>;\r\n            break;\r\n        \r\n        case 'bacon':\r\n            ingredient = <div className='Bacon'></div>;\r\n            break;\r\n            \r\n        default:\r\n            ingredient = null;     \r\n    }\r\n\r\n    return ingredient;\r\n};\r\n\r\nBurgerIngridient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngridient;","import React from 'react';\r\nimport './burger.scss';\r\nimport BurgerIngridient from './BurgerIngridient/burgerIngridient';\r\n\r\nconst Burger = ({ ingredients }) => {\r\n\r\n    let arrayIngredients = Object.keys(ingredients)\r\n        .map(igKey => {\r\n            return [...Array(ingredients[igKey])].map((_, i) => {\r\n                return <BurgerIngridient key={igKey + i} type={igKey} />;\r\n            });\r\n        })\r\n        .reduce((prev, cur) => {\r\n            return prev.concat(cur);\r\n        }, []);\r\n\r\n        if(arrayIngredients.length === 0){\r\n            arrayIngredients = <p>Please start adding ingredients!</p>\r\n        }     \r\n    return(\r\n        <div className='Burger'>\r\n            <BurgerIngridient type=\"bread-top\" />            \r\n            { arrayIngredients }\r\n            <BurgerIngridient type=\"bread-bottom\" />\r\n        </div>       \r\n    );\r\n};\r\n\r\nexport default Burger;","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","import React, { Component } from 'react';\r\n\r\nconst asyncComponent = (importComponent) => {\r\n    return class extends Component {\r\n        state = {\r\n            component: null\r\n        }\r\n\r\n        componentDidMount () {\r\n            importComponent()\r\n                .then(cmp => {\r\n                    this.setState({component: cmp.default});\r\n                });\r\n        }\r\n        \r\n        render () {\r\n            const C = this.state.component;\r\n\r\n            return C ? <C {...this.props} /> : null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default asyncComponent;","import React from 'react';\r\nimport './logo.scss';\r\nimport burgerLogo from '../../assets/burger-logo.png';\r\n\r\nconst Logo = ({height}) => (\r\n    <div className='Logo' style={{height}}>\r\n        <img src={burgerLogo} alt='Logo' />\r\n    </div>\r\n);\r\n\r\nexport default Logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './navigationItem.scss';\r\n\r\nconst NavigationItem = (props) => (\r\n    <li className='NavigationItem'>\r\n        <NavLink \r\n            to={props.link}  \r\n            exact={props.exact}\r\n        >{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default NavigationItem;","import React from 'react';\r\nimport './navigationItems.scss';\r\nimport NavigationItem from './NavigationItem/navigationItem';\r\n\r\nconst NavigationItems = (props) => (\r\n    <ul className='NavigationItems'>\r\n        <NavigationItem link=\"/\" exact >Burger Builder</NavigationItem>\r\n        { props.isAuthenticated ? <NavigationItem link=\"/orders\" >Orders</NavigationItem> : null }\r\n        { !props.isAuthenticated \r\n            ? <NavigationItem link=\"/auth\" >Login</NavigationItem>\r\n            : <NavigationItem link=\"/logout\" >Logout</NavigationItem>\r\n        }    \r\n    </ul>\r\n);\r\n\r\nexport default NavigationItems;","import React from 'react';\r\nimport './drawerToggle.scss';\r\n\r\nconst DrawerToggle = ({clicked}) => (\r\n\r\n    <div className='DrawerToggle' onClick={clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default DrawerToggle;","import React from 'react';\r\nimport './toolbar.scss';\r\nimport Logo from '../../Logo/logo';\r\nimport NavigationItems from '../NavigationItems/navigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/drawerToggle';\r\n\r\nconst Toolbar = (props) => (\r\n    <header className='Toolbar'>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />    \r\n        <div className='Dlogo'>\r\n            <Logo />\r\n        </div>\r\n        \r\n        <nav className='desktopOnly'>\r\n            <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>        \r\n    </header>\r\n);\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport Logo from '../../Logo/logo';\r\nimport NavigationItems from '../NavigationItems/navigationItems';\r\nimport './sideDrawer.scss';\r\nimport BackDrop from '../../UI/Backdrop/backDrop';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\nconst SideDrawer = ({ open, closed, isAuth }) => {\r\n\r\n    return(\r\n        <Aux>\r\n            <BackDrop show={open} clicked={closed} />\r\n            <div className={` ${open ? 'Open' : 'Close' } Sidedrawer`} onClick={closed}>\r\n                <div className='Mlogo'>\r\n                    <Logo />\r\n                </div>\r\n                \r\n                <nav>\r\n                    <NavigationItems isAuthenticated={isAuth} />\r\n                </nav>    \r\n            </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default SideDrawer;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport './layout.scss';\r\nimport Toolbar from '../../components/Navigation/Toolbar/toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/sideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDraweClosedhandler = () => {\r\n        this.setState({ showSideDrawer: false });\r\n    };\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState(( prevState ) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(                         \r\n            <Aux>\r\n                <Toolbar \r\n                    isAuth={this.props.isAuthenticated}\r\n                    drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer \r\n                    isAuth={this.props.isAuthenticated}\r\n                    open={this.state.showSideDrawer} \r\n                    closed={this.sideDraweClosedhandler} />\r\n                <main className='content'>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n    }  \r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport './BuildControl.scss';\r\n\r\nconst BuildControl = ({label, added, removed, disabled}) => (\r\n    <div className='BuildControl'>\r\n        <div className='Label'>{label}</div>\r\n        <button \r\n            onClick={removed} \r\n            className='Less' \r\n            disabled={disabled}\r\n        >Less</button>\r\n        <button \r\n            onClick={added} \r\n            className='More'\r\n        >More</button>\r\n    </div>\r\n);\r\n\r\nexport default BuildControl;","import React from 'react';\r\nimport './BuildControls.scss';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'}\r\n];\r\n\r\nconst BuildControls = ({ingredientAdded, ingredientRemove, disabled, price, purchasable, ordered, isAUth}) => (\r\n    <div className='BuildControls'>\r\n        <p>Current Price: <strong>{price.toFixed(2)}</strong></p>\r\n        {controls.map(control => (\r\n            <BuildControl \r\n                key={control.label} \r\n                label={control.label} \r\n                added={() => ingredientAdded(control.type)}\r\n                removed={() => ingredientRemove(control.type)}\r\n                disabled={disabled[control.type]}\r\n            />\r\n        ))}\r\n        <button \r\n            className='OrderButton'\r\n            disabled={!purchasable}\r\n            onClick={ordered}\r\n        >{ isAUth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\r\n    </div>\r\n);\r\n\r\nexport default BuildControls;","import React from 'react';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport CustomButton from '../../UI/Button/button';\r\n\r\n\r\nconst OrderSummary = ({ingredients, purhaseCanceled, purchaseContinued, price}) => {\r\n\r\n    //this could be class component for testing\r\n\r\n    const ingredientSummary = Object.keys(ingredients)\r\n        .map(igKey => {\r\n            return (\r\n                <li key={igKey}>\r\n                    <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {ingredients[igKey]}\r\n                </li>\r\n            );\r\n        });\r\n\r\n    return(\r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with following ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p> <strong>Total Price: {price.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <CustomButton btnType=\"Danger\" clicked={purhaseCanceled}>CANCEL</CustomButton>\r\n            <CustomButton btnType=\"Success\" clicked={purchaseContinued}>CONTINUE</CustomButton>\r\n        </Aux>\r\n    ); \r\n};\r\n\r\nexport default OrderSummary;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport axios from '../../axios';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Burger from '../../components/Burger/burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/orderSummary';\r\nimport Spinner from '../../components/UI/Spinner/spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass BurgerBuilder extends Component{\r\n\r\n    state = {\r\n        purchasing: false\r\n    };\r\n\r\n    componentDidMount () {\r\n        this.props.ingredientsInit();\r\n    }\r\n\r\n\r\n    updatePurchaseState = ingredients => {\r\n    \r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey]\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n            \r\n            return sum > 0;  \r\n    }\r\n\r\n    // addIngredientHandler = type => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     const updatedCount = oldCount + 1;  \r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceAddtion = INGREDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice + priceAddtion;\r\n    //     this.setState({\r\n    //         totalPrice: newPrice,\r\n    //         ingredients: updatedIngredients\r\n    //     });\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n    \r\n    // removeIngredientHandler = type => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     if(oldCount <= 0){\r\n    //         return;\r\n    //     }\r\n    //     const updatedCount = oldCount - 1;  \r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceDeduction = INGREDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice - priceDeduction;\r\n    //     this.setState({\r\n    //         totalPrice: newPrice,\r\n    //         ingredients: updatedIngredients\r\n    //     });\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n\r\n\r\n    purchaseHandler = () => {\r\n        if (this.props.isAuthenticated) {\r\n            this.setState({purchasing: true});\r\n        } else {\r\n            this.props.setAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }        \r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.initPurchase();\r\n        this.props.history.push('/checkout');\r\n        \r\n        //method for sharing data using query params\r\n        // const queryParams= [];\r\n        // for (let i in this.state.ingredients){\r\n        //     queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n        // }\r\n        // queryParams.push('price=' + this.props.price);\r\n        // const queryString = queryParams.join('&');\r\n        // this.props.history.push({\r\n        //     pathname: '/checkout',\r\n        //     search: '?' + queryString\r\n        // });\r\n    }\r\n\r\n    render(){\r\n\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        // returns either TRUE or FALSE for each ingredients object\r\n        for(let key in disabledInfo) { \r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n\r\n        let orderSummary = null;\r\n\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\r\n\r\n        if(this.props.ings){\r\n            burger = (<Aux>   \r\n                <Burger ingredients={this.props.ings} />\r\n                <BuildControls\r\n                    ingredientAdded={this.props.ingredientAdd}\r\n                    ingredientRemove={this.props.ingredientRemove}\r\n                    disabled={disabledInfo}\r\n                    purchasable={this.updatePurchaseState(this.props.ings)}\r\n                    ordered={this.purchaseHandler}\r\n                    price={this.props.price}\r\n                    isAUth={this.props.isAuthenticated}\r\n                />\r\n                </Aux>);\r\n\r\n                orderSummary = <OrderSummary \r\n                    ingredients={this.props.ings} \r\n                    purhaseCanceled={this.purchaseCancelHandler}\r\n                    purchaseContinued={this.purchaseContinueHandler}\r\n                    price={this.props.price}/>\r\n        }\r\n\r\n        // if(this.state.loading){\r\n        //     orderSummary = <Spinner />;\r\n        // }                \r\n\r\n        return(\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>                \r\n                {burger}              \r\n            </Aux>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        ingredientAdd: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        ingredientRemove: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        ingredientsInit: () => dispatch(actions.initIngredients()),\r\n        initPurchase: () => dispatch(actions.purchaseInit()),\r\n        setAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { useEffect } from 'react';\nimport { Route, Switch, withRouter,Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\n\nimport Layout from './hoc/Layout/layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\n\nconst asyncCheckout = asyncComponent(() => {\n  return import('./containers/Checkout/Checkout'); \n});\n\nconst asyncOrders = asyncComponent(() => {\n  return import('./containers/Orders/Orders'); \n});\n\nconst asyncAuth = asyncComponent(() => {\n  return import('./containers/Auth/Auth'); \n});\n\nfunction App(props) {\n\n  useEffect(() => {\n    props.onTryAutoSignUp();\n  }, []); \n\n  \n  let routes = (\n    <Switch>\n      <Route path=\"/auth\" component={asyncAuth} />\n      <Route path=\"/\" exact component={BurgerBuilder} />\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n\n  if (props.isAuthenticated) {\n    routes = (\n      <Switch>        \n        <Route path=\"/checkout\" component={asyncCheckout} />\n        <Route path=\"/orders\" component={asyncOrders} />\n        <Route path=\"/logout\" component={Logout} />\n        <Route path=\"/auth\" component={asyncAuth} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>    \n    );\n  }\n\n  return (  \n    <div>\n      <Layout>\n        {routes}        \n      </Layout>\n    </div>\n\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      onTryAutoSignUp: () => dispatch(actions.authCheckState()) \n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst INITIAL_STATE = {\r\n    ingredients : {},\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    bacon: 0.2,\r\n    cheese: 0.3,\r\n    meat: 1.5\r\n};\r\n\r\n\r\nconst addIngredient = ( state, action ) => {\r\n    const updatedIngredient = { [action.payload]: state.ingredients[action.payload] + 1 };\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.payload],\r\n        building: true\r\n    }\r\n    return updateObject(state, updatedState);\r\n};\r\n\r\nconst removeIngredient = ( state, action ) => {\r\n    const updatedIng = { [action.payload]: state.ingredients[action.payload] - 1 };\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.payload],\r\n        building: true\r\n    }\r\n    return updateObject(state, updatedSt);\r\n};\r\n\r\nconst setIngredient = ( state, action ) => {\r\n    return updateObject(state, {\r\n        ingredients: {\r\n            salad: action.payload.salad,\r\n            bacon: action.payload.bacon,\r\n            cheese: action.payload.cheese,\r\n            meat: action.payload.meat\r\n        },\r\n        totalPrice: 4,\r\n        error: false,\r\n        building: false\r\n    });\r\n};\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\r\n            \r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n            \r\n        case actionTypes.SET_INGREDIENTS: return setIngredient(state, action);\r\n            \r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return updateObject(state, {error: true});        \r\n        default:\r\n            return state;    \r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst INITIAL_STATE = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}; \r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return updateObject( state, {purchased: false} );\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return updateObject( state, {loading: true} );\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = updateObject( action.orderData, {id: action.orderId} );\r\n            return updateObject(state, {\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)\r\n            });\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return updateObject( state, {loading: false} );\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return updateObject( state, {loading: true} );\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return updateObject( state, {\r\n                orders: action.orders,\r\n                loading: false\r\n            } );  \r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return updateObject( state, {loading: false} );\r\n        default:\r\n            return state;        \r\n    }\r\n};\r\n\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst INITIAL_STATE = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n}\r\n\r\nconst authStart = ( state, action ) => {\r\n    return updateObject(state, { error: false, loading: true });\r\n};\r\n\r\nconst authSuccess = ( state, action ) => {\r\n    return updateObject(state, { \r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false \r\n    });\r\n};\r\n\r\nconst authFail = ( state, action ) => {\r\n    return updateObject(state, { \r\n        error: action.error, \r\n        loading: false \r\n    });\r\n};\r\n\r\nconst authLogout = ( state, action ) => {\r\n    return updateObject(state, { token: null, userId: null });\r\n};\r\n\r\nconst setAuthRedirectPath = ( state, action ) => {\r\n    return updateObject(state, { authRedirectPath: action.path })\r\n}\r\n\r\nconst reducer = ( state = INITIAL_STATE, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);            \r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);               \r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);               \r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);               \r\n        default: return state;    \r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n    <React.StrictMode>      \n        <App />      \n    </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}